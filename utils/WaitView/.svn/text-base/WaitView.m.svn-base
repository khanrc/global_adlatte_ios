//
//  WaitView.m
//  ImInHotspot
//
//  Created by 태한 김 on 11. 1. 13..
//  Copyright 2011 kth. All rights reserved.
//

#import "WaitView.h"
 #import <QuartzCore/QuartzCore.h>

@implementation WaitView


- (id)initWithFrame:(CGRect)frame {
    
    self = [super initWithFrame:frame];
    if (self) {
        int textWidth = [Utilities textSize:NSLocalizedString(@"Loading", @"Loading") font:PS_FONT(15)].width;

		self.backgroundColor = [UIColor colorWithRed:0.0 green:0 blue:0 alpha:0.7];
		self.layer.cornerRadius = 10.0;
		self.clipsToBounds = YES;

		label = [[UILabel alloc] initWithFrame: CGRectMake((self.bounds.size.width-(textWidth+30))/2 + 30, 0, textWidth, self.bounds.size.height)];
		label.text = NSLocalizedString(@"Loading", @"Loading");
		label.backgroundColor = [UIColor clearColor];
		label.textColor = [UIColor whiteColor];
		label.textAlignment = UITextAlignmentCenter;
		label.font = PS_FONT(15);
		[self addSubview:label];
		
		activityIndicationView = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle: UIActivityIndicatorViewStyleWhite];
		
		activityIndicationView.center = CGPointMake((self.bounds.size.width-(textWidth+30))/2+10, self.bounds.size.height / 2);
		[self addSubview: activityIndicationView];
    }
    return self;
}


// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect {
    // Drawing code.
	[activityIndicationView startAnimating];
}

- (void)hideText
{
	activityIndicationView.center = CGPointMake(self.frame.size.width / 2.0, activityIndicationView.center.y);
	label.hidden = YES;
}

@end
